user  nginx;
worker_processes  1;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;
events {
    worker_connections  1024;
}
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    upstream docker-node {
        #ip_hash #: 동일한 IP의 접속은 같은 서버로 접속하도록 하는 옵션입니다.
        #least_conn #: 가장 접속이 적은 서버로 접속을 유도하는 옵션으로 ip_hash와 같이쓰입니다.
        server node0:3000 weight=10 max_fails=3 fail_timeout=30s;
        server node1:3000 weight=10 max_fails=3 fail_timeout=30s;
    }

    upstream docker-nginx {
        server web0:8080 weight=10 max_fails=3 fail_timeout=30s;
        server web1:8080 weight=10 max_fails=3 fail_timeout=30s;
    }

    upstream docker-echo {
        server echo0:8080 weight=10 max_fails=3 fail_timeout=30s;
        server echo1:8080 weight=10 max_fails=3 fail_timeout=30s;
    }

    server {
        listen 80;
        server_name localhost;

        location / {
            proxy_pass         http://docker-nginx;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
        }

        location /node {
            rewrite ^/node(/.*)$ $1 break;  # url에서 /node 뒤에 있는 URL을 전부 그대로 사용.
            proxy_pass         http://docker-node;
            proxy_redirect     off;
            proxy_set_header   Host $http_host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-NginX-Proxy true;
        }

        location /echo {
            proxy_pass         http://docker-echo;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
        }

    }
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;
    include /etc/nginx/conf.d/*.conf;
}